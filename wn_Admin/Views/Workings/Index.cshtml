@model IEnumerable<wn_Admin.Models.CompanyModels.Working>

@using GridMvc.Html;

@{
    Layout = null;
    ViewBag.Title = "Index";
}

<html>
<head>
    <title>Manage Time Sheet</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css?v=1.0" rel="stylesheet" />
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/StyleSheet_Timesheet.css?v=1.0" type="text/css" rel="stylesheet" />
    <link href="~/Content/fullcalendar.css" type="text/css" rel="stylesheet" />
    <link href="~/Content/fullcalendar.print.css" type="text/css" rel="stylesheet" media='print' />
    <link href="~/Content/Gridmvc.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <script src="~/Scripts/CustomJS/jquery.min.js"></script>
    <script type="text/javascript" src="~/Scripts/CustomJS/moment.min.js"></script>
    <script type="text/javascript" src="~/Scripts/CustomJS/fullcalendar.min.js"></script>
    <script src="~/Scripts/ng_controllers/timesheet_index.js?v=1.1"></script>
    <script src="~/Scripts/gridmvc.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // Initializing calendar
            @*var events = @Html.Raw(Json.Encode(ViewBag.Events as List<wn_Admin.Models.UtilityModels.EventViewModel>));*@
            var url = window.location.href;
            var hasParams = url.indexOf('?');
            var filters = "";
            if(hasParams >= 0){
               filters = url.substring(url.indexOf('?'));
            }

            $.getJSON("/EventData" + filters, null, function (data) {
                initializeCalendar(data);
                $('#spinnerSection').hide();
            });
            
      

            // Add change event to clientName
            $('#clientId').change(function () {

                $('#projectId').empty();

                var client = $('#clientId').find(":selected").text();

                getProjectByClient(client);
            });
        });




        window.onload = function(){
            var formBlock = $('#formBlock0');
            setDatetiempicker($, formBlock);
        };
    </script>
</head>

<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <img src="~/Content/Images/wn_logo.jpg" class="img-responsive img-rounded" />
                @*@Html.ActionLink("Woodlands Admin", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })*@
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Dashboard", "Index", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container">

        <h2>Index</h2>

        <div class="row">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.ActionLink("Create Working Time", "Create")
                </div>

                <div class="col-md-12">
                    @Html.ActionLink("Create Off Time", "CreateOff")
                </div>

            </div>


        </div>




        <div class="row">
            <div class="col-md-5" id="formBlock0">
                Advanced Search
                <input type="checkbox" id="SearchToggle" onclick="toggleSearchPanel(this)" checked>
                <div id="SearchPanel" class="panel panel-primary" style="">
                    <div class="panel-heading">
                        <h3 class="panel-title">Criterias</h3>
                    </div>
                    @using (Html.BeginForm("Index", "Workings", FormMethod.Get))
                    {
                        <div class="panel-body form-horizontal">

                            <div class="form-group">
                                @Html.Label("Employee", htmlAttributes: new { @class = "control-label col-md-2", @for = "EmployeeID" })
                                <div class="col-md-10">
                                    @Html.DropDownList("EmployeeID", (MultiSelectList)ViewBag.EmployeeID, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Start Date", htmlAttributes: new { @class = "control-label col-md-2", @for = "startDate" })
                                <div class="col-md-10">

                                    @Html.Editor("startDate", new { htmlAttributes = new { @class = "form-control b-datepicker", @type = "text" } })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("End Date", htmlAttributes: new { @class = "control-label col-md-2", @for = "endDate" })
                                <div class="col-md-10">

                                    @Html.Editor("endDate", new { htmlAttributes = new { @class = "form-control b-datepicker", @type = "text" } })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Period Year", htmlAttributes: new { @class = "control-label col-md-2", @for = "ppYear" })
                                <div class="col-md-10">
                                    @Html.TextBox("ppYear", "", new { @type = "number", @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Period", htmlAttributes: new { @class = "control-label col-md-2", @for = "pp" })
                                <div class="col-md-10">
                                    @Html.TextBox("pp", "", new { @type = "number", @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Task", htmlAttributes: new { @class = "control-label col-md-2", @for = "taskIds" })
                                <div class="col-md-10">
                                    @Html.DropDownList("tasks", (MultiSelectList)ViewBag.taskIds, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Client", htmlAttributes: new { @class = "control-label col-md-2", @for = "clientId" })
                                <div class="col-md-10">
                                    @Html.DropDownList("clientId", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Project", htmlAttributes: new { @class = "control-label col-md-2", @for = "projectId" })
                                <div class="col-md-10">
                                    @Html.DropDownList("projectId", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Is Reviewed?", htmlAttributes: new { @class = "control-label col-md-2", @for = "isReviewed" })
                                <div class="col-md-10">
                                    @Html.DropDownList("isReviewed", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.Label("Export To Excel?", htmlAttributes: new { @class = "control-label col-md-2", @for = "exportToExcel" })
                                <div class="col-md-10">
                                    @Html.CheckBox("exportToExcel", false, new { @onchange="toggleSummaryBox(this)"})
                                </div>
                            </div>

                            <div class="form-group" style="display:none" id="summarySection">
                                @Html.Label("Group by Employee?", htmlAttributes: new { @class = "control-label col-md-2", @for = "isGroupBy" })
                                <div class="col-md-10">
                                    @Html.CheckBox("isGroupBy", false)
                                </div>
                            </div>

                        </div>
                        <div class="panel-footer clearfix">
                            <div class="pull-right">
                                <a href="/workings" class="btn btn-info">Clear</a>
                                <input type="submit" value="Search" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>

                <div class="col-md-12">
                    @*@foreach (var summary in ViewBag.TMSummary as List<wn_Admin.Models.UtilityModels.TimesheetSummaryViewModel>)
                    {
                        <div class="col-md-6" style="border:1px solid black;">
                            <div class="col-md-12">
                                Name: @summary.EmployeeName
                            </div>
                            <div class="col-md-12">
                                Date: @summary.DateRange
                            </div>
                            <div class="col-md-12">
                                Time: @summary.TotalHours hours
                            </div>
                        </div>
                    }*@
                </div>
            </div>

            <div class="col-md-7">
                <div class="col-md-12">
                    <div id="mCldr">
                        <div class="spinner spinner-position" id="spinnerSection"></div>
                    </div>

                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12">
                @Html.Grid(Model).Columns(columns =>
                    {

                        if (ViewBag.hasFullControl)
                        {
                            columns.Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c => Html.CheckBox("box", false, new { value = @c.WorkingID, @class = "reviewBox" })).Titled("<input type=\"checkbox\" onclick=\"checkAll(this)\" />");

                            columns
                                .Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c =>
                                Html.ActionLink("[Edit]", "Edit", new { id = c.WorkingID }) + " " +
                                Html.ActionLink("[Details]", "Details", new { id = c.WorkingID }) + " " +
                                Html.ActionLink("[Delete]", "Delete", new { id = c.WorkingID })
                                )
                                .Titled("<button class=\"btn btn-primary\" onclick=\"submitReviews()\">Review</button>");
                        }
                        else if (ViewBag.hasReviewControl)
                        {

                            // A supervisor cannot review his own timesheet
                            columns.Add()
                            .Encoded(false)
                            .Sanitized(false)
                            .RenderValueAs(c => (ViewBag.CurrentEID == null || (ViewBag.CurrentEID != c.EmployeeID && c.isReviewed == false)) ?
                                    Html.CheckBox("box", false, new { value = @c.WorkingID, @class = "reviewBox" }) + "" : ""
                                );


                            columns
                                .Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c => "")
                                .Titled("<button class=\"btn btn-primary\" onclick=\"submitReviews()\">Review</button>");

                            columns
                                .Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c => (!c.isReviewed && c.EmployeeID == ViewBag.EID) ?
                                    (Html.ActionLink("[Edit]", "Edit", new { id = c.WorkingID }) + " " +
                                Html.ActionLink("[Delete]", "Delete", new { id = c.WorkingID })) : ""
                                )
                                .Titled("");


                        }
                        else
                        {

                            columns
                                .Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c => (!c.isReviewed && c.EmployeeID == ViewBag.EID) ?
                                    (Html.ActionLink("[Edit]", "Edit", new { id = c.WorkingID }) + " " +
                                Html.ActionLink("[Delete]", "Delete", new { id = c.WorkingID })) : ""
                                )
                                .Titled("");
                        }

                        columns.Add(c => c.isReviewed).RenderValueAs(c => c.isReviewed ? "Yes" : "No").Titled("Reviewed?").SetWidth(5).Css("s-bg-color");
                        columns.Add(c => c.Reviewer).Css("s-important");
                        columns.Add(c => c.Employee.FullName).Titled("Employee").Filterable(true).Css("s-important");
                        columns.Add(c => c.Date).Format("{0:MMMM dd}").Titled("Date").Css("s-important");
                        //columns.Add(c => c.EndDate).Format("{0:yyyy-MM-dd HH:mm}").Titled("Time - End of the day");
                        //columns.Add(c => c.PPYr).Titled("Period Year");
                        //columns.Add(c => c.PP).Titled("Pay Period");
                        columns.Add(c => c.Project.FK_Client.ClientName).Titled("Client").Css("s-important");
                        columns.Add(c => c.Project.ProjectName).Titled("Project").Css("s-important");
                        columns.Add(c => c.Task).Css("s-important").Filterable(true);
                        columns.Add(c => c.Identifier).Css("s-important");
                        columns.Add(c => c.Hours).Css("s-important");
                        columns.Add(c => c.JobDescription).Titled("Job Description").Filterable(true).Css("s-important");


                        columns.Add(c => c.Veh).Titled("Vehicle");
                        columns.Add(c => c.Crew);
                        columns.Add(c => c.StartKm).Titled("Start Km");
                        columns.Add(c => c.EndKm).Titled("End Km");
                        columns.Add(c => c.KmDiff).Titled("Km Difference");
                        columns.Add(c => c.Equipment);
                        columns.Add(c => c.Field).Titled("Field Access");
                        columns.Add(c => c.PD).RenderValueAs(c => c.PD ? "Yes" : "No").Titled("Per Diem");
                        columns.Add(c => c.OffReason).Titled("Off Detail");

                        


                    }).WithPaging(30).Sortable(true)
            </div>
        </div>
    </div>

    <hr />

</body>




</html>