@model IEnumerable<wn_Admin.Models.CompanyModels.Working>

@using GridMvc.Html;

@{
    Layout = null;
    ViewBag.Title = "Index";
}

<html>
<head>
    <title>Manage Time Sheet</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/StyleSheet_Timesheet.css" type="text/css" rel="stylesheet" />
    <link href="~/Content/fullcalendar.css" type="text/css" rel="stylesheet" />
    <link href="~/Content/fullcalendar.print.css" type="text/css" rel="stylesheet" media='print' />
    <link href="~/Content/Gridmvc.css" rel="stylesheet" />

    <script src="~/Scripts/CustomJS/jquery.min.js"></script>
    <script type="text/javascript" src="~/Scripts/CustomJS/moment.min.js"></script>
    <script type="text/javascript" src="~/Scripts/CustomJS/fullcalendar.min.js"></script>
    <script src="~/Scripts/ng_controllers/timesheet_controller.js?v=1.2"></script>
    <script src="~/Scripts/gridmvc.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var events = @Html.Raw(Json.Encode(ViewBag.Events as List<wn_Admin.Models.UtilityModels.EventViewModel>));

            //events.push({title:"hello", start:"2015-07-23"});
            //console.log(events);
            initializeCalendar(events);
        });
    </script>
</head>

<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <img src="~/Content/Images/wn_logo.jpg" class="img-responsive img-rounded" />
                @*@Html.ActionLink("Woodlands Admin", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })*@
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Dashboard", "Index", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container">

        <h2>Index</h2>

        <div class="row">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.ActionLink("Create Working Time", "Create")
                </div>

                <div class="col-md-12">
                    @Html.ActionLink("Create Off Time", "CreateOff")
                </div>

            </div>


        </div>




        <div class="row">
            <div class="col-md-5">
                Advanced Search
                <input type="checkbox" id="SearchToggle" onclick="toggleSearchPanel(this)" checked>
                <div id="SearchPanel" class="panel panel-primary" style="">
                    <div class="panel-heading">
                        <h3 class="panel-title">Criterias</h3>
                    </div>
                    @using (Html.BeginForm("Index", "Workings", FormMethod.Get))
                    {
                        <div class="panel-body form-horizontal">

                            <div class="form-group">
                                @Html.Label("Employee", htmlAttributes: new { @class = "control-label col-md-2", @for = "EmployeeID" })
                                <div class="col-md-10">
                                    @Html.DropDownList("EmployeeID", (MultiSelectList)ViewBag.EmployeeID, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Start Date", htmlAttributes: new { @class = "control-label col-md-2", @for = "startDate" })
                                <div class="col-md-10">
                                    @Html.TextBox("startDate", "", new { @type = "date", @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("End Date", htmlAttributes: new { @class = "control-label col-md-2", @for = "endDate" })
                                <div class="col-md-10">
                                    @Html.TextBox("endDate", "", new { @type = "date", @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Period Year", htmlAttributes: new { @class = "control-label col-md-2", @for = "ppYear" })
                                <div class="col-md-10">
                                    @Html.TextBox("ppYear", "", new { @type = "number", @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Period", htmlAttributes: new { @class = "control-label col-md-2", @for = "pp" })
                                <div class="col-md-10">
                                    @Html.TextBox("pp", "", new { @type = "number", @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Client", htmlAttributes: new { @class = "control-label col-md-2", @for = "clientId" })
                                <div class="col-md-10">
                                    @Html.DropDownList("clientId", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Project", htmlAttributes: new { @class = "control-label col-md-2", @for = "projectId" })
                                <div class="col-md-10">
                                    @Html.DropDownList("projectId", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Is Reviewed?", htmlAttributes: new { @class = "control-label col-md-2", @for = "isReviewed" })
                                <div class="col-md-10">
                                    @Html.DropDownList("isReviewed", null, "Choose ...", htmlAttributes: new { @class= "form-control"})
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.Label("Export To Excel?", htmlAttributes: new { @class = "control-label col-md-2", @for = "exportToExcel" })
                                <div class="col-md-10">
                                    @Html.CheckBox("exportToExcel", false)
                                </div>
                            </div>

                        </div>
                        <div class="panel-footer clearfix">
                            <div class="pull-right">
                                <a href="/workings" class="btn btn-info">Clear</a>
                                <input type="submit" value="Search" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>

                <div class="col-md-12">
                    @foreach (var summary in ViewBag.TMSummary as List<wn_Admin.Models.UtilityModels.TimesheetSummaryViewModel>)
                    {
                        <div class="col-md-6" style="border:1px solid black;">
                            <div class="col-md-12">
                                Name: @summary.EmployeeName
                            </div>
                            <div class="col-md-12">
                                Date: @summary.DateRange
                            </div>
                            <div class="col-md-12">
                                Time: @summary.TotalHours hours
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="col-md-7">
                <div class="col-md-12">
                    <div id="mCldr">

                    </div>

                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12">
                @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add(c => c.Employee.FullName).Titled("Name").Filterable(true);
                        columns.Add(c => c.Date).Format("{0:yyyy-MM-dd HH:mm}");
                        columns.Add(c => c.EndDate).Format("{0:yyyy-MM-dd HH:mm}");
                        columns.Add(c => c.PPYr);
                        columns.Add(c => c.PP);
                        columns.Add(c => c.Project.FK_Client.ClientName).Titled("Client");
                        columns.Add(c => c.Project.ProjectName).Titled("Project");
                        columns.Add(c => c.Task);
                        columns.Add(c => c.Identifier);
                        columns.Add(c => c.Veh);
                        columns.Add(c => c.Crew);
                        columns.Add(c => c.StartKm);
                        columns.Add(c => c.EndKm);
                        columns.Add(c => c.KmDiff);
                        columns.Add(c => c.Equipment);
                        columns.Add(c => c.Field);
                        columns.Add(c => c.PD).RenderValueAs(c => c.PD ? "Yes" : "No");
                        columns.Add(c => c.JobDescription).Titled("Job Description").Filterable(true);
                        columns.Add(c => c.OffReason).Titled("Off Detail");
                        columns.Add(c => c.Hours);
                        columns.Add(c => c.isReviewed).RenderValueAs(c => c.isReviewed ? "Yes" : "No").Titled("Is Reviewed?").SetWidth(5);
                        columns.Add(c => c.Reviewer);
                        
                        if (ViewBag.hasFullControl)
                        {
                            columns.Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c => Html.CheckBox("box", false, new { value = @c.WorkingID, @class = "reviewBox" })).Titled("<input type=\"checkbox\" onclick=\"checkAll(this)\" />");

                            columns
                                .Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c =>
                                Html.ActionLink("[Edit]", "Edit", new { id = c.WorkingID }) + " " +
                                Html.ActionLink("[Details]", "Details", new { id = c.WorkingID }) + " " +
                                Html.ActionLink("[Delete]", "Delete", new { id = c.WorkingID })
                                )
                                .Titled("<button class=\"btn btn-primary\" onclick=\"submitReviews()\">Review</button>");
                        }
                        else if (ViewBag.hasReviewControl)
                        {

                            // A supervisor cannot review his own timesheet
                            columns.Add()
                            .Encoded(false)
                            .Sanitized(false)
                            .RenderValueAs(c => (ViewBag.CurrentEID == null || ViewBag.CurrentEID != c.EmployeeID) ?
                                    Html.CheckBox("box", false, new { value = @c.WorkingID, @class = "reviewBox" }) + "" : ""
                                );


                            columns
                                .Add()
                                .Encoded(false)
                                .Sanitized(false)
                                .RenderValueAs(c => "")
                                .Titled("<button class=\"btn btn-primary\" onclick=\"submitReviews()\">Review</button>");
                        }


                    }).WithPaging(10).Sortable(true)
            </div>
        </div>
    </div>

    <hr />

</body>

</html>