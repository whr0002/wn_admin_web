@model wn_Admin.Models.CompanyModels.Working

@{
    ViewBag.Title = "Create";
}

@section jsSection{

    <script src="~/Scripts/ng_controllers/timesheet_controller.js"></script>

}

@section cssSection{
    <link rel="stylesheet" href="/Content/bootstrap-datetimepicker.css" />
}

<script type="text/javascript">
    var jq14 = jQuery.noConflict(true);
    (function ($) {
        $(document).ready(function () {
            var formBlock = $('#formBlock0');
            setDatetiempicker($, formBlock);
        });
    }(jq14));
</script>

<h2>
    Create
    <button class="btn btn-primary" id="addForm" onclick="addForm()">+</button>
    <button class="btn btn-primary" id="addForm" onclick="ajaxSubmit()">Submit</button>
</h2>
<div class="row" id="formRow">
    <div id="formBlock0" class="col-md-6">
        <div class="col-md-12" id="validationErrors" style="color:red;"></div>

        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Working</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("EmployeeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control b-datepicker", @type = "text" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control b-datepicker", @type="text"} })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PPYr, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PPYr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.PPYr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PP, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.PP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Client", htmlAttributes: new { @class = "control-label col-md-2", @for = "ClientName" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClientName", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectID, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-7">
                        @Html.DropDownList("ProjectID", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-5">
                        <span id="PID"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Task, "Task", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Task", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Task, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Identifier, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Identifier, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Identifier, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Veh, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Veh", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Veh, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Crew, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Crew, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Crew, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartKm, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartKm, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartKm, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndKm, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndKm, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndKm, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.GPS, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.GPS)
                                @Html.ValidationMessageFor(model => model.GPS, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Equipment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div>
                            @Html.DropDownList("Equipment", (MultiSelectList)ViewBag.Equipment, new { multiple = "multiple", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Equipment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Field, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Field", null, "Choose ...", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Field, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.PD)
                            @Html.ValidationMessageFor(model => model.PD, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display:none;">
                    @Html.LabelFor(model => model.OffReason, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OffReason", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OffReason, "", new { @class = "text-danger" })
                    </div>

                    @*@Html.HiddenFor(model => model.OffReason)*@
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Bank, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bank, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bank, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OT, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OT, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OT, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>*@
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

